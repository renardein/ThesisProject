<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ktkCisDataSet" targetNamespace="http://tempuri.org/ktkCisDataSet.xsd" xmlns:mstns="http://tempuri.org/ktkCisDataSet.xsd" xmlns="http://tempuri.org/ktkCisDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ktkCisConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ktkCisConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ThesisProject.Properties.Settings.GlobalReference.Default.ktkCisConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExamTableAdapter" GeneratorDataComponentClassName="ExamTableAdapter" Name="Exam" UserDataComponentName="ExamTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.Exam" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Exam] WHERE (([ExamId] = @Original_ExamId) AND ([ModuleId] = @Original_ModuleId) AND ([Date] = @Original_Date) AND ([ExaminerId] = @Original_ExaminerId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModuleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Exam] ([ModuleId], [Date], [ExaminerId]) VALUES (@ModuleId, @Date, @ExaminerId);
SELECT ExamId, ModuleId, Date, ExaminerId FROM Exam WHERE (ExamId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ModuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModuleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ExamId, ModuleId, Date, ExaminerId FROM dbo.Exam</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Exam] SET [ModuleId] = @ModuleId, [Date] = @Date, [ExaminerId] = @ExaminerId WHERE (([ExamId] = @Original_ExamId) AND ([ModuleId] = @Original_ModuleId) AND ([Date] = @Original_Date) AND ([ExaminerId] = @Original_ExaminerId));
SELECT ExamId, ModuleId, Date, ExaminerId FROM Exam WHERE (ExamId = @ExamId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ModuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModuleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModuleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ExamId" ColumnName="ExamId" DataSourceName="ktkCis.dbo.Exam" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ExamId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ExamId" DataSetColumn="ExamId" />
              <Mapping SourceColumn="ModuleId" DataSetColumn="ModuleId" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="ExaminerId" DataSetColumn="ExaminerId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExamExaminerTableAdapter" GeneratorDataComponentClassName="ExamExaminerTableAdapter" Name="ExamExaminer" UserDataComponentName="ExamExaminerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.ExamExaminer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExamExaminer] WHERE (([ExamId] = @Original_ExamId) AND ([ExaminerId] = @Original_ExaminerId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExamExaminer] ([ExamId], [ExaminerId]) VALUES (@ExamId, @ExaminerId);
SELECT ExamId, ExaminerId FROM ExamExaminer WHERE (ExamId = @ExamId) AND (ExaminerId = @ExaminerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ExamId, ExaminerId FROM dbo.ExamExaminer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExamExaminer] SET [ExamId] = @ExamId, [ExaminerId] = @ExaminerId WHERE (([ExamId] = @Original_ExamId) AND ([ExaminerId] = @Original_ExaminerId));
SELECT ExamId, ExaminerId FROM ExamExaminer WHERE (ExamId = @ExamId) AND (ExaminerId = @ExaminerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ExamId" DataSetColumn="ExamId" />
              <Mapping SourceColumn="ExaminerId" DataSetColumn="ExaminerId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExaminerTableAdapter" GeneratorDataComponentClassName="ExaminerTableAdapter" Name="Examiner" UserDataComponentName="ExaminerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.Examiner" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Examiner] WHERE (([ExaminerId] = @Original_ExaminerId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Examiner] ([ExaminerId], [Name]) VALUES (@ExaminerId, @Name);
SELECT ExaminerId, Name FROM Examiner WHERE (ExaminerId = @ExaminerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ExaminerId, Name FROM dbo.Examiner</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Examiner] SET [ExaminerId] = @ExaminerId, [Name] = @Name WHERE (([ExaminerId] = @Original_ExaminerId) AND ([Name] = @Original_Name));
SELECT ExaminerId, Name FROM Examiner WHERE (ExaminerId = @ExaminerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExaminerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExaminerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ExaminerId" DataSetColumn="ExaminerId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExamMarkTableAdapter" GeneratorDataComponentClassName="ExamMarkTableAdapter" Name="ExamMark" UserDataComponentName="ExamMarkTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.ExamMark" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExamMark] ([ExamID], [MarkId]) VALUES (@ExamID, @MarkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExamID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarkId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ExamID, MarkId FROM dbo.ExamMark</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ExamID" DataSetColumn="ExamID" />
              <Mapping SourceColumn="MarkId" DataSetColumn="MarkId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupTableAdapter" GeneratorDataComponentClassName="GroupTableAdapter" Name="Group" UserDataComponentName="GroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.[Group]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Group] WHERE (([GroupId] = @Original_GroupId) AND ([Title] = @Original_Title))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Group] ([Title]) VALUES (@Title);
SELECT GroupId, Title FROM [Group] WHERE (GroupId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupId, Title FROM dbo.[Group]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Group] SET [Title] = @Title WHERE (([GroupId] = @Original_GroupId) AND ([Title] = @Original_Title));
SELECT GroupId, Title FROM [Group] WHERE (GroupId = @GroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupId" ColumnName="GroupId" DataSourceName="ktkCis.dbo.[Group]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarkTableAdapter" GeneratorDataComponentClassName="MarkTableAdapter" Name="Mark" UserDataComponentName="MarkTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.Mark" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Mark] WHERE (([MarkId] = @Original_MarkId) AND ([ExamId] = @Original_ExamId) AND ([StudentId] = @Original_StudentId) AND ([Mark] = @Original_Mark))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MarkId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Mark] ([ExamId], [StudentId], [Mark]) VALUES (@ExamId, @StudentId, @Mark);
SELECT MarkId, ExamId, StudentId, Mark FROM Mark WHERE (MarkId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MarkId, ExamId, StudentId, Mark FROM dbo.Mark</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Mark] SET [ExamId] = @ExamId, [StudentId] = @StudentId, [Mark] = @Mark WHERE (([MarkId] = @Original_MarkId) AND ([ExamId] = @Original_ExamId) AND ([StudentId] = @Original_StudentId) AND ([Mark] = @Original_Mark));
SELECT MarkId, ExamId, StudentId, Mark FROM Mark WHERE (MarkId = @MarkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MarkId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExamId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExamId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MarkId" ColumnName="MarkId" DataSourceName="ktkCis.dbo.Mark" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MarkId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MarkId" DataSetColumn="MarkId" />
              <Mapping SourceColumn="ExamId" DataSetColumn="ExamId" />
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="Mark" DataSetColumn="Mark" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProModuleTableAdapter" GeneratorDataComponentClassName="ProModuleTableAdapter" Name="ProModule" UserDataComponentName="ProModuleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.ProModule" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProModule] WHERE (([ModuleId] = @Original_ModuleId) AND ([Title] = @Original_Title))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModuleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProModule] ([Title]) VALUES (@Title);
SELECT ModuleId, Title FROM ProModule WHERE (ModuleId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ModuleId, Title FROM dbo.ProModule</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProModule] SET [Title] = @Title WHERE (([ModuleId] = @Original_ModuleId) AND ([Title] = @Original_Title));
SELECT ModuleId, Title FROM ProModule WHERE (ModuleId = @ModuleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModuleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModuleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ModuleId" ColumnName="ModuleId" DataSourceName="ktkCis.dbo.ProModule" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ModuleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ModuleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ModuleId" DataSetColumn="ModuleId" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([StudentId] = @Original_StudentId) AND ([FirstName] = @Original_FirstName) AND ((@IsNull_MiddleName = 1 AND [MiddleName] IS NULL) OR ([MiddleName] = @Original_MiddleName)) AND ([LastName] = @Original_LastName) AND ([GroupId] = @Original_GroupId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([FirstName], [MiddleName], [LastName], [GroupId]) VALUES (@FirstName, @MiddleName, @LastName, @GroupId);
SELECT StudentId, FirstName, MiddleName, LastName, GroupId FROM Student WHERE (StudentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentId, FirstName, MiddleName, LastName, GroupId FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [FirstName] = @FirstName, [MiddleName] = @MiddleName, [LastName] = @LastName, [GroupId] = @GroupId WHERE (([StudentId] = @Original_StudentId) AND ([FirstName] = @Original_FirstName) AND ((@IsNull_MiddleName = 1 AND [MiddleName] IS NULL) OR ([MiddleName] = @Original_MiddleName)) AND ([LastName] = @Original_LastName) AND ([GroupId] = @Original_GroupId));
SELECT StudentId, FirstName, MiddleName, LastName, GroupId FROM Student WHERE (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MiddleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="StudentId" DataSourceName="ktkCis.dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="MiddleName" DataSetColumn="MiddleName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserTableAdapter" GeneratorDataComponentClassName="UserTableAdapter" Name="User" UserDataComponentName="UserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ktkCisConnectionString (Settings)" DbObjectName="ktkCis.dbo.[User]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[User] WHERE (([UserId] = @Original_UserId) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([Role] = @Original_Role))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[User] ([Username], [Password], [Role]) VALUES (@Username, @Password, @Role);
SELECT UserId, Username, Password, Role FROM [User] WHERE (UserId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserId, Username, Password, Role FROM dbo.[User]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[User] SET [Username] = @Username, [Password] = @Password, [Role] = @Role WHERE (([UserId] = @Original_UserId) AND ([Username] = @Original_Username) AND ([Password] = @Original_Password) AND ([Role] = @Original_Role));
SELECT UserId, Username, Password, Role FROM [User] WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Role" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserId" ColumnName="UserId" DataSourceName="ktkCis.dbo.[User]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Role" DataSetColumn="Role" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ktkCisDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="ktkCisDataSet" msprop:Generator_DataSetName="ktkCisDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Exam" msprop:Generator_RowEvHandlerName="ExamRowChangeEventHandler" msprop:Generator_RowDeletedName="ExamRowDeleted" msprop:Generator_RowDeletingName="ExamRowDeleting" msprop:Generator_RowEvArgName="ExamRowChangeEvent" msprop:Generator_TablePropName="Exam" msprop:Generator_RowChangedName="ExamRowChanged" msprop:Generator_RowChangingName="ExamRowChanging" msprop:Generator_TableClassName="ExamDataTable" msprop:Generator_RowClassName="ExamRow" msprop:Generator_TableVarName="tableExam" msprop:Generator_UserTableName="Exam">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExamId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ExamId" msprop:Generator_ColumnPropNameInTable="ExamIdColumn" msprop:Generator_ColumnVarNameInTable="columnExamId" msprop:Generator_UserColumnName="ExamId" type="xs:int" />
              <xs:element name="ModuleId" msprop:Generator_ColumnPropNameInRow="ModuleId" msprop:Generator_ColumnPropNameInTable="ModuleIdColumn" msprop:Generator_ColumnVarNameInTable="columnModuleId" msprop:Generator_UserColumnName="ModuleId" type="xs:int" />
              <xs:element name="Date" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_ColumnVarNameInTable="columnDate" msprop:Generator_UserColumnName="Date" type="xs:dateTime" />
              <xs:element name="ExaminerId" msprop:Generator_ColumnPropNameInRow="ExaminerId" msprop:Generator_ColumnPropNameInTable="ExaminerIdColumn" msprop:Generator_ColumnVarNameInTable="columnExaminerId" msprop:Generator_UserColumnName="ExaminerId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExamExaminer" msprop:Generator_RowEvHandlerName="ExamExaminerRowChangeEventHandler" msprop:Generator_RowDeletedName="ExamExaminerRowDeleted" msprop:Generator_RowDeletingName="ExamExaminerRowDeleting" msprop:Generator_RowEvArgName="ExamExaminerRowChangeEvent" msprop:Generator_TablePropName="ExamExaminer" msprop:Generator_RowChangedName="ExamExaminerRowChanged" msprop:Generator_RowChangingName="ExamExaminerRowChanging" msprop:Generator_TableClassName="ExamExaminerDataTable" msprop:Generator_RowClassName="ExamExaminerRow" msprop:Generator_TableVarName="tableExamExaminer" msprop:Generator_UserTableName="ExamExaminer">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExamId" msprop:Generator_ColumnPropNameInRow="ExamId" msprop:Generator_ColumnPropNameInTable="ExamIdColumn" msprop:Generator_ColumnVarNameInTable="columnExamId" msprop:Generator_UserColumnName="ExamId" type="xs:int" />
              <xs:element name="ExaminerId" msprop:Generator_ColumnPropNameInRow="ExaminerId" msprop:Generator_ColumnPropNameInTable="ExaminerIdColumn" msprop:Generator_ColumnVarNameInTable="columnExaminerId" msprop:Generator_UserColumnName="ExaminerId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Examiner" msprop:Generator_RowEvHandlerName="ExaminerRowChangeEventHandler" msprop:Generator_RowDeletedName="ExaminerRowDeleted" msprop:Generator_RowDeletingName="ExaminerRowDeleting" msprop:Generator_RowEvArgName="ExaminerRowChangeEvent" msprop:Generator_TablePropName="Examiner" msprop:Generator_RowChangedName="ExaminerRowChanged" msprop:Generator_RowChangingName="ExaminerRowChanging" msprop:Generator_TableClassName="ExaminerDataTable" msprop:Generator_RowClassName="ExaminerRow" msprop:Generator_TableVarName="tableExaminer" msprop:Generator_UserTableName="Examiner">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExaminerId" msprop:Generator_ColumnPropNameInRow="ExaminerId" msprop:Generator_ColumnPropNameInTable="ExaminerIdColumn" msprop:Generator_ColumnVarNameInTable="columnExaminerId" msprop:Generator_UserColumnName="ExaminerId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExamMark" msprop:Generator_RowEvHandlerName="ExamMarkRowChangeEventHandler" msprop:Generator_RowDeletedName="ExamMarkRowDeleted" msprop:Generator_RowDeletingName="ExamMarkRowDeleting" msprop:Generator_RowEvArgName="ExamMarkRowChangeEvent" msprop:Generator_TablePropName="ExamMark" msprop:Generator_RowChangedName="ExamMarkRowChanged" msprop:Generator_RowChangingName="ExamMarkRowChanging" msprop:Generator_TableClassName="ExamMarkDataTable" msprop:Generator_RowClassName="ExamMarkRow" msprop:Generator_TableVarName="tableExamMark" msprop:Generator_UserTableName="ExamMark">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExamID" msprop:Generator_ColumnPropNameInRow="ExamID" msprop:Generator_ColumnPropNameInTable="ExamIDColumn" msprop:Generator_ColumnVarNameInTable="columnExamID" msprop:Generator_UserColumnName="ExamID" type="xs:int" />
              <xs:element name="MarkId" msprop:Generator_ColumnPropNameInRow="MarkId" msprop:Generator_ColumnPropNameInTable="MarkIdColumn" msprop:Generator_ColumnVarNameInTable="columnMarkId" msprop:Generator_UserColumnName="MarkId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Group" msprop:Generator_RowEvHandlerName="GroupRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupRowDeleted" msprop:Generator_RowDeletingName="GroupRowDeleting" msprop:Generator_RowEvArgName="GroupRowChangeEvent" msprop:Generator_TablePropName="Group" msprop:Generator_RowChangedName="GroupRowChanged" msprop:Generator_RowChangingName="GroupRowChanging" msprop:Generator_TableClassName="GroupDataTable" msprop:Generator_RowClassName="GroupRow" msprop:Generator_TableVarName="tableGroup" msprop:Generator_UserTableName="Group">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="Title" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Mark" msprop:Generator_RowEvHandlerName="MarkRowChangeEventHandler" msprop:Generator_RowDeletedName="MarkRowDeleted" msprop:Generator_RowDeletingName="MarkRowDeleting" msprop:Generator_RowEvArgName="MarkRowChangeEvent" msprop:Generator_TablePropName="Mark" msprop:Generator_RowChangedName="MarkRowChanged" msprop:Generator_RowChangingName="MarkRowChanging" msprop:Generator_TableClassName="MarkDataTable" msprop:Generator_RowClassName="MarkRow" msprop:Generator_TableVarName="tableMark" msprop:Generator_UserTableName="Mark">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MarkId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="MarkId" msprop:Generator_ColumnPropNameInTable="MarkIdColumn" msprop:Generator_ColumnVarNameInTable="columnMarkId" msprop:Generator_UserColumnName="MarkId" type="xs:int" />
              <xs:element name="ExamId" msprop:Generator_ColumnPropNameInRow="ExamId" msprop:Generator_ColumnPropNameInTable="ExamIdColumn" msprop:Generator_ColumnVarNameInTable="columnExamId" msprop:Generator_UserColumnName="ExamId" type="xs:int" />
              <xs:element name="StudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="Mark" msprop:Generator_ColumnPropNameInRow="Mark" msprop:Generator_ColumnPropNameInTable="MarkColumn" msprop:Generator_ColumnVarNameInTable="columnMark" msprop:Generator_UserColumnName="Mark" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProModule" msprop:Generator_RowEvHandlerName="ProModuleRowChangeEventHandler" msprop:Generator_RowDeletedName="ProModuleRowDeleted" msprop:Generator_RowDeletingName="ProModuleRowDeleting" msprop:Generator_RowEvArgName="ProModuleRowChangeEvent" msprop:Generator_TablePropName="ProModule" msprop:Generator_RowChangedName="ProModuleRowChanged" msprop:Generator_RowChangingName="ProModuleRowChanging" msprop:Generator_TableClassName="ProModuleDataTable" msprop:Generator_RowClassName="ProModuleRow" msprop:Generator_TableVarName="tableProModule" msprop:Generator_UserTableName="ProModule">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ModuleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ModuleId" msprop:Generator_ColumnPropNameInTable="ModuleIdColumn" msprop:Generator_ColumnVarNameInTable="columnModuleId" msprop:Generator_UserColumnName="ModuleId" type="xs:int" />
              <xs:element name="Title" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_TablePropName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_RowClassName="StudentRow" msprop:Generator_TableVarName="tableStudent" msprop:Generator_UserTableName="Student">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MiddleName" msprop:Generator_ColumnPropNameInRow="MiddleName" msprop:Generator_ColumnPropNameInTable="MiddleNameColumn" msprop:Generator_ColumnVarNameInTable="columnMiddleName" msprop:Generator_UserColumnName="MiddleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_UserColumnName="LastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="User" msprop:Generator_RowEvHandlerName="UserRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRowDeleted" msprop:Generator_RowDeletingName="UserRowDeleting" msprop:Generator_RowEvArgName="UserRowChangeEvent" msprop:Generator_TablePropName="User" msprop:Generator_RowChangedName="UserRowChanged" msprop:Generator_RowChangingName="UserRowChanging" msprop:Generator_TableClassName="UserDataTable" msprop:Generator_RowClassName="UserRow" msprop:Generator_TableVarName="tableUser" msprop:Generator_UserTableName="User">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_UserColumnName="UserId" type="xs:int" />
              <xs:element name="Username" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="16" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Role" msprop:Generator_ColumnPropNameInRow="Role" msprop:Generator_ColumnPropNameInTable="RoleColumn" msprop:Generator_ColumnVarNameInTable="columnRole" msprop:Generator_UserColumnName="Role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="16" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Exam" />
      <xs:field xpath="mstns:ExamId" />
    </xs:unique>
    <xs:unique name="ExamExaminer_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExamExaminer" />
      <xs:field xpath="mstns:ExamId" />
      <xs:field xpath="mstns:ExaminerId" />
    </xs:unique>
    <xs:unique name="Examiner_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Examiner" />
      <xs:field xpath="mstns:ExaminerId" />
    </xs:unique>
    <xs:unique name="Group_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Group" />
      <xs:field xpath="mstns:GroupId" />
    </xs:unique>
    <xs:unique name="Mark_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Mark" />
      <xs:field xpath="mstns:MarkId" />
    </xs:unique>
    <xs:unique name="ProModule_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProModule" />
      <xs:field xpath="mstns:ModuleId" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:StudentId" />
    </xs:unique>
    <xs:unique name="User_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:User" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Exam_ProModule" msdata:parent="ProModule" msdata:child="Exam" msdata:parentkey="ModuleId" msdata:childkey="ModuleId" msprop:Generator_UserParentTable="ProModule" msprop:Generator_UserChildTable="Exam" msprop:Generator_RelationVarName="relationFK_Exam_ProModule" msprop:Generator_UserRelationName="FK_Exam_ProModule" msprop:Generator_ChildPropName="GetExamRows" msprop:Generator_ParentPropName="ProModuleRow" />
      <msdata:Relationship name="FK_ExamExaminer_Exam" msdata:parent="Exam" msdata:child="ExamExaminer" msdata:parentkey="ExamId" msdata:childkey="ExamId" msprop:Generator_UserParentTable="Exam" msprop:Generator_UserChildTable="ExamExaminer" msprop:Generator_RelationVarName="relationFK_ExamExaminer_Exam" msprop:Generator_ChildPropName="GetExamExaminerRows" msprop:Generator_ParentPropName="ExamRow" msprop:Generator_UserRelationName="FK_ExamExaminer_Exam" />
      <msdata:Relationship name="FK_ExamExaminer_Examiner" msdata:parent="Examiner" msdata:child="ExamExaminer" msdata:parentkey="ExaminerId" msdata:childkey="ExaminerId" msprop:Generator_UserParentTable="Examiner" msprop:Generator_UserChildTable="ExamExaminer" msprop:Generator_RelationVarName="relationFK_ExamExaminer_Examiner" msprop:Generator_UserRelationName="FK_ExamExaminer_Examiner" msprop:Generator_ChildPropName="GetExamExaminerRows" msprop:Generator_ParentPropName="ExaminerRow" />
      <msdata:Relationship name="FK_ExamMark_Exam" msdata:parent="Exam" msdata:child="ExamMark" msdata:parentkey="ExamId" msdata:childkey="ExamID" msprop:Generator_UserParentTable="Exam" msprop:Generator_UserChildTable="ExamMark" msprop:Generator_RelationVarName="relationFK_ExamMark_Exam" msprop:Generator_ChildPropName="GetExamMarkRows" msprop:Generator_ParentPropName="ExamRow" msprop:Generator_UserRelationName="FK_ExamMark_Exam" />
      <msdata:Relationship name="FK_ExamMark_Mark" msdata:parent="Mark" msdata:child="ExamMark" msdata:parentkey="MarkId" msdata:childkey="MarkId" msprop:Generator_UserParentTable="Mark" msprop:Generator_UserChildTable="ExamMark" msprop:Generator_RelationVarName="relationFK_ExamMark_Mark" msprop:Generator_UserRelationName="FK_ExamMark_Mark" msprop:Generator_ChildPropName="GetExamMarkRows" msprop:Generator_ParentPropName="MarkRow" />
      <msdata:Relationship name="FK_Mark_Exam" msdata:parent="Exam" msdata:child="Mark" msdata:parentkey="ExamId" msdata:childkey="ExamId" msprop:Generator_UserParentTable="Exam" msprop:Generator_UserChildTable="Mark" msprop:Generator_RelationVarName="relationFK_Mark_Exam" msprop:Generator_ChildPropName="GetMarkRows" msprop:Generator_ParentPropName="ExamRow" msprop:Generator_UserRelationName="FK_Mark_Exam" />
      <msdata:Relationship name="FK_Mark_Student" msdata:parent="Student" msdata:child="Mark" msdata:parentkey="StudentId" msdata:childkey="StudentId" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Mark" msprop:Generator_RelationVarName="relationFK_Mark_Student" msprop:Generator_UserRelationName="FK_Mark_Student" msprop:Generator_ChildPropName="GetMarkRows" msprop:Generator_ParentPropName="StudentRow" />
      <msdata:Relationship name="FK_Student_Group" msdata:parent="Group" msdata:child="Student" msdata:parentkey="GroupId" msdata:childkey="GroupId" msprop:Generator_UserParentTable="Group" msprop:Generator_UserChildTable="Student" msprop:Generator_RelationVarName="relationFK_Student_Group" msprop:Generator_ChildPropName="GetStudentRows" msprop:Generator_ParentPropName="GroupRow" msprop:Generator_UserRelationName="FK_Student_Group" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>